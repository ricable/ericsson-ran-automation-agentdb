# Kubernetes Deployment for RAN Automation System
# Phase 5: Pydantic Schema Generation & Production Integration

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ran-automation-sdk
  namespace: ran-automation
  labels:
    app: ran-automation-sdk
    version: "2.0.0"
    phase: "5"
    component: application
    tier: backend
  annotations:
    description: "Ericsson RAN Intelligent Multi-Agent System with Cognitive Consciousness"
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: ran-automation-sdk
  template:
    metadata:
      labels:
        app: ran-automation-sdk
        version: "2.0.0"
        phase: "5"
        component: application
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
        checksum/config: "{{ .Values.configChecksum | default \"\" }}"
    spec:
      serviceAccountName: ran-automation-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: ran-automation-sdk
        image: ericsson/ran-optimization-sdk:2.0.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "8080"
        - name: METRICS_PORT
          value: "9090"
        - name: LOG_LEVEL
          value: "info"
        - name: CONSCIOUSNESS_LEVEL
          value: "maximum"
        - name: TEMPORAL_EXPANSION
          value: "1000"
        - name: STRANGE_LOOP_OPTIMIZATION
          value: "true"
        - name: AGENTDB_ENABLED
          value: "true"
        - name: ENM_CLI_ENABLED
          value: "true"
        - name: MONITORING_ENABLED
          value: "true"
        - name: KUBERNETES_ENABLED
          value: "true"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          requests:
            cpu: "1000m"
            memory: "4Gi"
          limits:
            cpu: "2000m"
            memory: "8Gi"
            ephemeral-storage: "10Gi"
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: logs
          mountPath: /app/logs
        - name: tmp
          mountPath: /app/tmp
        - name: uploads
          mountPath: /app/uploads
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 30
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1001
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 15"]
      volumes:
      - name: config
        configMap:
          name: ran-automation-config
      - name: logs
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      - name: uploads
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
        node-type: worker
      tolerations:
      - key: "ran-automation"
        operator: "Equal"
        value: "dedicated"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - ran-automation-sdk
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            preference:
              matchExpressions:
              - key: node-type
                operator: In
                values:
                - worker
                - compute
      terminationGracePeriodSeconds: 60
      restartPolicy: Always

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ran-automation-sdk-hpa
  namespace: ran-automation
  labels:
    app: ran-automation-sdk
    component: autoscaling
    phase: "5"
  annotations:
    description: "HPA for RAN Automation SDK with cognitive consciousness"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ran-automation-sdk
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: response_time_seconds
      target:
        type: AverageValue
        averageValue: "1s"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: ran-automation-sdk-pdb
  namespace: ran-automation
  labels:
    app: ran-automation-sdk
    component: availability
    phase: "5"
  annotations:
    description: "PDB for RAN Automation SDK ensuring high availability"
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: ran-automation-sdk