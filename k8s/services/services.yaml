apiVersion: v1
kind: Service
metadata:
  name: ran-automation-api-service
  namespace: ran-automation
  labels:
    app: ran-automation
    component: api
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: https
    port: 443
    targetPort: https
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 8080
    protocol: TCP
  selector:
    app: ran-automation
    component: api
  sessionAffinity: None
---
apiVersion: v1
kind: Service
metadata:
  name: agentdb-service
  namespace: ran-automation
  labels:
    app: agentdb
    component: database
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9187"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: postgres
    port: 5432
    targetPort: postgres
    protocol: TCP
  - name: metrics
    port: 9187
    targetPort: 9187
    protocol: TCP
  selector:
    app: agentdb
    component: database
  sessionAffinity: None
---
apiVersion: v1
kind: Service
metadata:
  name: cognitive-performance-service
  namespace: ran-automation
  labels:
    app: cognitive-performance
    component: service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9091
    targetPort: 8080
    protocol: TCP
  selector:
    app: cognitive-performance
    component: service
  sessionAffinity: None
---
apiVersion: v1
kind: Service
metadata:
  name: swarm-coordination-service
  namespace: ran-automation
  labels:
    app: swarm-coordination
    component: service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8081"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8081
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9092
    targetPort: 8081
    protocol: TCP
  selector:
    app: swarm-coordination
    component: service
  sessionAffinity: None
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: ran-automation
  labels:
    app: redis
    component: cache
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: redis
    port: 6379
    targetPort: redis
    protocol: TCP
  - name: metrics
    port: 9121
    targetPort: 9121
    protocol: TCP
  selector:
    app: redis
    component: cache
  sessionAffinity: None
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: ran-monitoring
  labels:
    app: prometheus
    component: monitoring
spec:
  type: ClusterIP
  ports:
  - name: web
    port: 9090
    targetPort: web
    protocol: TCP
  selector:
    app: prometheus
    component: monitoring
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: ran-monitoring
  labels:
    app: grafana
    component: monitoring
spec:
  type: ClusterIP
  ports:
  - name: web
    port: 3000
    targetPort: web
    protocol: TCP
  selector:
    app: grafana
    component: monitoring
---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager-service
  namespace: ran-monitoring
  labels:
    app: alertmanager
    component: monitoring
spec:
  type: ClusterIP
  ports:
  - name: web
    port: 9093
    targetPort: web
    protocol: TCP
  selector:
    app: alertmanager
    component: monitoring
---
apiVersion: v1
kind: Service
metadata:
  name: node-exporter-service
  namespace: ran-monitoring
  labels:
    app: node-exporter
    component: monitoring
spec:
  type: ClusterIP
  ports:
  - name: metrics
    port: 9100
    targetPort: metrics
    protocol: TCP
  selector:
    app: node-exporter
    component: monitoring
---
apiVersion: v1
kind: Service
metadata:
  name: ran-automation-ingress
  namespace: ran-automation
  labels:
    app: ran-automation
    component: ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  - name: https
    port: 443
    targetPort: 443
    protocol: TCP
  selector:
    app: ran-automation
    component: ingress
  loadBalancerIP: "" # Optional: specify external IP if needed