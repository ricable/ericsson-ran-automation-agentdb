apiVersion: v1
kind: ResourceQuota
metadata:
  name: ran-automation-quota
  namespace: ran-automation
  labels:
    app: ran-automation
    component: resource-quota
spec:
  hard:
    requests.cpu: "20"
    requests.memory: 40Gi
    limits.cpu: "40"
    limits.memory: 80Gi
    persistentvolumeclaims: "10"
    pods: "50"
    services: "20"
    secrets: "20"
    configmaps: "20"
    count/deployments.apps: "20"
    count/replicasets.apps: "20"
    count/statefulsets.apps: "5"
    count/daemonsets.apps: "5"
    count/jobs.batch: "20"
    count/cronjobs.batch: "10"
    count/ingresses.extensions: "10"
    count/networkpolicies.networking.k8s.io: "20"
    count/poddisruptionbudgets.policy: "10"
    count/horizontalpodautoscalers.autoscaling: "10"
    count/certificates.cert-manager.io: "10"
    count/issuers.cert-manager.io: "5"
---
apiVersion: v1
kind: LimitRange
metadata:
  name: ran-automation-limits
  namespace: ran-automation
  labels:
    app: ran-automation
    component: limit-range
spec:
  limits:
  - default:
      cpu: "2000m"
      memory: "4Gi"
    defaultRequest:
      cpu: "100m"
      memory: "128Mi"
    type: Container
  - max:
      cpu: "4000m"
      memory: "8Gi"
    min:
      cpu: "50m"
      memory: "64Mi"
    type: Container
  - max:
      storage: "100Gi"
    min:
      storage: "1Gi"
    type: PersistentVolumeClaim
  - max:
      cpu: "1000m"
      memory: "1Gi"
    min:
      cpu: "100m"
      memory: "128Mi"
    type: Pod
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: ran-monitoring-quota
  namespace: ran-monitoring
  labels:
    app: ran-monitoring
    component: resource-quota
spec:
  hard:
    requests.cpu: "10"
    requests.memory: 20Gi
    limits.cpu: "20"
    limits.memory: 40Gi
    persistentvolumeclaims: "10"
    pods: "20"
    services: "10"
    secrets: "10"
    configmaps: "10"
    count/deployments.apps: "10"
    count/statefulsets.apps: "5"
    count/daemonsets.apps: "5"
    count/jobs.batch: "10"
    count/cronjobs.batch: "5"
    count/ingresses.extensions: "5"
    count/networkpolicies.networking.k8s.io: "10"
    count/poddisruptionbudgets.policy: "5"
    count/horizontalpodautoscalers.autoscaling: "5"
---
apiVersion: v1
kind: LimitRange
metadata:
  name: ran-monitoring-limits
  namespace: ran-monitoring
  labels:
    app: ran-monitoring
    component: limit-range
spec:
  limits:
  - default:
      cpu: "1000m"
      memory: "2Gi"
    defaultRequest:
      cpu: "100m"
      memory: "128Mi"
    type: Container
  - max:
      cpu: "4000m"
      memory: "8Gi"
    min:
      cpu: "50m"
      memory: "64Mi"
    type: Container
  - max:
      storage: "200Gi"
    min:
      storage: "10Gi"
    type: PersistentVolumeClaim
---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: ran-logging-quota
  namespace: ran-logging
  labels:
    app: ran-logging
    component: resource-quota
spec:
  hard:
    requests.cpu: "5"
    requests.memory: 10Gi
    limits.cpu: "10"
    limits.memory: 20Gi
    persistentvolumeclaims: "5"
    pods: "10"
    services: "5"
    secrets: "5"
    configmaps: "5"
    count/deployments.apps: "5"
    count/statefulsets.apps: "3"
    count/daemonsets.apps: "3"
    count/jobs.batch: "5"
    count/cronjobs.batch: "3"
    count/ingresses.extensions: "3"
    count/networkpolicies.networking.k8s.io: "5"
---
apiVersion: v1
kind: LimitRange
metadata:
  name: ran-logging-limits
  namespace: ran-logging
  labels:
    app: ran-logging
    component: limit-range
spec:
  limits:
  - default:
      cpu: "500m"
      memory: "1Gi"
    defaultRequest:
      cpu: "100m"
      memory: "128Mi"
    type: Container
  - max:
      cpu: "2000m"
      memory: "4Gi"
    min:
      cpu: "50m"
      memory: "64Mi"
    type: Container
  - max:
      storage: "500Gi"
    min:
      storage: "50Gi"
    type: PersistentVolumeClaim
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ran-automation-api-hpa
  namespace: ran-automation
  labels:
    app: ran-automation
    component: hpa
    service: api
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ran-automation-api
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      selectPolicy: Min
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: cognitive-performance-hpa
  namespace: ran-automation
  labels:
    app: cognitive-performance
    component: hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cognitive-performance-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 75
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 85
  - type: Pods
    pods:
      metric:
        name: cognitive_processing_queue_length
      target:
        type: AverageValue
        averageValue: "50"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: swarm-coordination-hpa
  namespace: ran-automation
  labels:
    app: swarm-coordination
    component: hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: swarm-coordination-service
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: active_swarm_agents
      target:
        type: AverageValue
        averageValue: "25"
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: ran-automation-api-pdb
  namespace: ran-automation
  labels:
    app: ran-automation
    component: pdb
    service: api
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: ran-automation
      component: api
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: cognitive-performance-pdb
  namespace: ran-automation
  labels:
    app: cognitive-performance
    component: pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: cognitive-performance
      component: service
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: swarm-coordination-pdb
  namespace: ran-automation
  labels:
    app: swarm-coordination
    component: pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: swarm-coordination
      component: service
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: prometheus-pdb
  namespace: ran-monitoring
  labels:
    app: prometheus
    component: pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: prometheus
      component: monitoring
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: grafana-pdb
  namespace: ran-monitoring
  labels:
    app: grafana
    component: pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: grafana
      component: monitoring