apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ran-automation-ingress
  namespace: ran-automation
  labels:
    app: ran-automation
    component: ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: "http01"
    prometheus.io/scrape: "true"
    prometheus.io/port: "10254"
    prometheus.io/path: "/metrics"
spec:
  tls:
  - hosts:
    - api.ran-automation.example.com
    - cognitive.ran-automation.example.com
    - swarm.ran-automation.example.com
    secretName: ran-automation-tls
  rules:
  - host: api.ran-automation.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ran-automation-api-service
            port:
              number: 80
  - host: cognitive.ran-automation.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cognitive-performance-service
            port:
              number: 8080
  - host: swarm.ran-automation.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: swarm-coordination-service
            port:
              number: 8081
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: monitoring-ingress
  namespace: ran-monitoring
  labels:
    app: monitoring
    component: ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/auth-type: "basic"
    nginx.ingress.kubernetes.io/auth-secret: "monitoring-auth"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - grafana.ran-automation.example.com
    - prometheus.ran-automation.example.com
    - alertmanager.ran-automation.example.com
    secretName: monitoring-tls
  rules:
  - host: grafana.ran-automation.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana-service
            port:
              number: 3000
  - host: prometheus.ran-automation.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prometheus-service
            port:
              number: 9090
  - host: alertmanager.ran-automation.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: alertmanager-service
            port:
              number: 9093