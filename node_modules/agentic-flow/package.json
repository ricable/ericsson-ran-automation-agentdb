{
  "name": "agentic-flow",
  "version": "1.8.10",
  "description": "Production-ready AI agent orchestration platform with 66 specialized agents, 213 MCP tools, ReasoningBank learning memory, and autonomous multi-agent swarms. Built by @ruvnet with Claude Agent SDK, neural networks, memory persistence, GitHub integration, and distributed consensus protocols.",
  "type": "module",
  "main": "dist/index.js",
  "bin": {
    "agentic-flow": "dist/cli-proxy.js",
    "agentdb": "dist/agentdb/cli/agentdb-cli.js"
  },
  "exports": {
    ".": "./dist/index.js",
    "./reasoningbank": {
      "node": "./dist/reasoningbank/index.js",
      "browser": "./dist/reasoningbank/wasm-adapter.js",
      "default": "./dist/reasoningbank/index.js"
    },
    "./reasoningbank/backend-selector": "./dist/reasoningbank/backend-selector.js",
    "./reasoningbank/wasm-adapter": "./dist/reasoningbank/wasm-adapter.js",
    "./router": "./dist/router/index.js",
    "./agent-booster": "./dist/agent-booster/index.js",
    "./transport/quic": "./dist/transport/quic.js"
  },
  "scripts": {
    "postinstall": "node scripts/postinstall.js || true",
    "start": "node --enable-source-maps dist/index.js",
    "build": "npm run build:wasm && tsc -p config/tsconfig.json --skipLibCheck || true && cp -r src/reasoningbank/prompts dist/reasoningbank/ && cp -r src/reasoningbank/config dist/reasoningbank/",
    "build:wasm": "cd ../reasoningbank && wasm-pack build --target bundler --out-dir pkg/bundler crates/reasoningbank-wasm && wasm-pack build --target web --out-dir pkg/web crates/reasoningbank-wasm && mkdir -p ../agentic-flow/wasm/reasoningbank && cp -r crates/reasoningbank-wasm/pkg/bundler/* ../agentic-flow/wasm/reasoningbank/ && cp -r crates/reasoningbank-wasm/pkg/web ../agentic-flow/wasm/reasoningbank/",
    "build:wasm:clean": "rm -rf ../reasoningbank/crates/reasoningbank-wasm/pkg && rm -rf wasm/reasoningbank",
    "dev": "tsx src/index.ts",
    "prepublishOnly": "npm run build",
    "test": "npm run test:retry && npm run test:logging",
    "test:retry": "tsx validation/quick-wins/test-retry.ts",
    "test:logging": "tsx validation/quick-wins/test-logging.ts",
    "test:wasm:e2e": "tsx validation/test-wasm-e2e.ts",
    "test:wasm:docker": "docker build -f Dockerfile.e2e -t agentic-flow-e2e . && docker run --rm agentic-flow-e2e",
    "validate": "tsx validation/quick-wins/validate-all.ts",
    "validate:sdk": "tsx validation/sdk-validation.ts",
    "validate:health": "bash validation/quick-wins/test-health.sh",
    "validate:openrouter": "tsx validation/test-openrouter-fixes.ts",
    "validate:claude-flow": "npm run test:memory && npm run test:coordination && npm run test:hybrid",
    "test:memory": "tsx validation/claude-flow/test-memory.ts",
    "test:coordination": "tsx validation/claude-flow/test-coordination.ts",
    "test:hybrid": "tsx validation/claude-flow/test-hybrid.ts",
    "test:fastmcp": "bash scripts/test-fastmcp-poc.sh",
    "test:quic": "tsx validation/test-quic-integration.ts",
    "test:quic:wasm": "tsx validation/test-quic-wasm.ts",
    "mcp:fastmcp-poc": "node dist/mcp/fastmcp/servers/poc-stdio.js",
    "mcp:http": "node dist/mcp/fastmcp/servers/http-sse.js",
    "mcp:stdio": "node dist/mcp/standalone-stdio.js",
    "claude-code": "node dist/cli/claude-code-wrapper.js",
    "example:goal-planner": "tsx src/examples/use-goal-planner.ts",
    "example:multi-agent": "tsx src/examples/multi-agent-orchestration.ts",
    "proxy": "node dist/proxy/anthropic-to-openrouter.js",
    "proxy:dev": "tsx src/proxy/anthropic-to-openrouter.ts",
    "proxy:quic": "node dist/proxy/quic-proxy.js",
    "proxy:quic:dev": "tsx src/proxy/quic-proxy.ts"
  },
  "keywords": [
    "ai",
    "ai-agents",
    "ai-orchestration",
    "agentic",
    "agents",
    "agent-swarm",
    "anthropic",
    "anthropic-claude",
    "automation",
    "autonomous-agents",
    "byzantine-consensus",
    "claude",
    "claude-agent-sdk",
    "claude-code",
    "reasoning-memory",
    "reasoningbank",
    "agent-learning",
    "memory-system",
    "consensus-protocols",
    "coordination",
    "crdt",
    "devops",
    "distributed-systems",
    "docker",
    "fastmcp",
    "flow-nexus",
    "github",
    "github-integration",
    "goal-planning",
    "goap",
    "hive-mind",
    "huggingface",
    "llm",
    "llm-orchestration",
    "machine-learning",
    "mcp",
    "mcp-server",
    "mcp-tools",
    "memory-persistence",
    "mesh-network",
    "multi-agent",
    "multi-agent-systems",
    "neural-networks",
    "onnx",
    "onnxruntime",
    "orchestration",
    "pagerank",
    "parallel-processing",
    "raft",
    "ruv",
    "ruvnet",
    "sparc",
    "sublinear-algorithms",
    "swarm",
    "swarm-intelligence",
    "task-orchestration",
    "typescript",
    "workflow",
    "workflow-automation"
  ],
  "author": {
    "name": "ruv",
    "url": "https://github.com/ruvnet"
  },
  "contributors": [
    {
      "name": "ruv",
      "url": "https://github.com/ruvnet"
    }
  ],
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/ruvnet/agentic-flow.git"
  },
  "bugs": {
    "url": "https://github.com/ruvnet/agentic-flow/issues"
  },
  "homepage": "https://github.com/ruvnet/agentic-flow#readme",
  "engines": {
    "node": ">=18.0.0"
  },
  "dependencies": {
    "@anthropic-ai/claude-agent-sdk": "^0.1.5",
    "@anthropic-ai/sdk": "^0.65.0",
    "@google/genai": "^1.22.0",
    "@xenova/transformers": "^2.17.2",
    "agentdb": "^1.4.3",
    "axios": "^1.12.2",
    "better-sqlite3": "^11.10.0",
    "dotenv": "^16.4.5",
    "express": "^5.1.0",
    "fastmcp": "^3.19.0",
    "http-proxy-middleware": "^3.0.5",
    "tiktoken": "^1.0.22",
    "ulid": "^3.0.1",
    "yaml": "^2.8.1",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@types/better-sqlite3": "^7.6.13",
    "@types/express": "^5.0.3",
    "@types/node": "^20.19.19",
    "tsx": "^4.19.0",
    "typescript": "^5.6.3"
  },
  "files": [
    "dist",
    "docs",
    ".claude",
    "validation",
    "scripts",
    "wasm",
    "certs",
    "README.md",
    "LICENSE",
    "VALIDATION-RESULTS.md",
    "CHANGELOG.md"
  ]
}
